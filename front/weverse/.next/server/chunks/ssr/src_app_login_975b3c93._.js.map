{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/login/login.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"authSwitch\": \"login-module__WEZH7G__authSwitch\",\n  \"container\": \"login-module__WEZH7G__container\",\n  \"divider\": \"login-module__WEZH7G__divider\",\n  \"emailDisplay\": \"login-module__WEZH7G__emailDisplay\",\n  \"forgotPassword\": \"login-module__WEZH7G__forgotPassword\",\n  \"inputGroup\": \"login-module__WEZH7G__inputGroup\",\n  \"links\": \"login-module__WEZH7G__links\",\n  \"loginBox\": \"login-module__WEZH7G__loginBox\",\n  \"logo\": \"login-module__WEZH7G__logo\",\n  \"socialButton\": \"login-module__WEZH7G__socialButton\",\n  \"socialLogin\": \"login-module__WEZH7G__socialLogin\",\n  \"submitButton\": \"login-module__WEZH7G__submitButton\",\n  \"title\": \"login-module__WEZH7G__title\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/Idol-Community/front/weverse/src/app/login/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation';\r\nimport styles from './login.module.css';\r\nimport { BsGoogle, BsTwitterX, BsApple } from 'react-icons/bs';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\n// 데모용으로 이메일 존재 여부를 확인하는 함수\r\nconst checkEmailExists = async (email: string): Promise<boolean> => {\r\n  try {\r\n    const response = await fetch('http://localhost:80/api/auth/check-email', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email }),\r\n    });\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      return data.exists;\r\n    } else {\r\n      let errorMessage = `이메일 존재 여부 확인 실패: ${response.statusText}`;\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (contentType && contentType.includes(\"application/json\")) {\r\n        const errorData = await response.json();\r\n        errorMessage = `이메일 존재 여부 확인 실패: ${errorData.message || response.statusText}`;\r\n      } else {\r\n        const errorText = await response.text();\r\n        errorMessage = `이메일 존재 여부 확인 실패: ${errorText || response.statusText}`;\r\n      }\r\n      console.error(errorMessage);\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.error('이메일 존재 여부 확인 중 오류 발생:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [step, setStep] = useState(1); // 1: email, 2: password\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const router = useRouter();\r\n  const auth = useAuth();\r\n\r\n  const handleEmailSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!email) {\r\n      alert('이메일을 입력해주세요.');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    const exists = await checkEmailExists(email);\r\n    setIsRegistered(exists);\r\n    setIsLoading(false);\r\n    setStep(2);\r\n  };\r\n\r\n  const handleFinalSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!password) {\r\n        alert('비밀번호를 입력해주세요.');\r\n        return;\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      let response;\r\n      let successMessage;\r\n      let errorMessagePrefix;\r\n\r\n      if (isRegistered) { // 로그인 시도\r\n        response = await fetch('http://localhost:80/api/auth/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email, password }),\r\n        });\r\n        successMessage = '로그인 성공!';\r\n        errorMessagePrefix = '로그인 실패';\r\n      } else { // 회원가입 시도\r\n        response = await fetch('http://localhost:80/api/auth/signup', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email, password }),\r\n        });\r\n        successMessage = '회원가입 성공!';\r\n        errorMessagePrefix = '회원가입 실패';\r\n      }\r\n\r\n      if (response.ok) {\r\n        let responseData;\r\n        const contentType = response.headers.get(\"content-type\");\r\n        if (contentType && contentType.includes(\"application/json\")) {\r\n          responseData = await response.json();\r\n        } else {\r\n          responseData = await response.text(); // Read as text if not JSON\r\n        }\r\n        alert(successMessage);\r\n        console.log(successMessage, responseData);\r\n        if (!isRegistered) { // 회원가입 성공 시\r\n          setIsRegistered(true); // 로그인 폼으로 전환\r\n          setStep(2); // 비밀번호 입력 단계 유지\r\n        } else if (typeof responseData === 'object' && responseData !== null && 'token' in responseData) {\r\n          auth.login(responseData.token);\r\n          router.push('/'); // 메인 페이지로 리다이렉트\r\n        }\r\n      } else {\r\n        let errorMessage = `${errorMessagePrefix}: ${response.statusText}`;\r\n        const contentType = response.headers.get(\"content-type\");\r\n        if (contentType && contentType.includes(\"application/json\")) {\r\n          const errorData = await response.json();\r\n          errorMessage = `${errorMessagePrefix}: ${errorData.message || response.statusText}`;\r\n        } else {\r\n          const errorText = await response.text();\r\n          errorMessage = `${errorMessagePrefix}: ${errorText || response.statusText}`;\r\n        }\r\n        alert(errorMessage);\r\n        console.error(errorMessage, response);\r\n      }\r\n    } catch (error) {\r\n      alert('네트워크 오류 또는 서버 응답 없음');\r\n      console.error('요청 중 오류 발생:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    // 이메일 입력창을 수정하면 다시 첫 단계로 돌아감\r\n    if (step === 2) {\r\n        setStep(1);\r\n        setPassword('');\r\n    }\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.loginBox}>\r\n        <h1 className={styles.logo}>weverse account</h1>\r\n        <h2 className={styles.title}>\r\n          위버스 계정으로<br />로그인이나 회원가입해 주세요\r\n        </h2>\r\n\r\n        {step === 1 && (\r\n          <form onSubmit={handleEmailSubmit}>\r\n            <div className={styles.inputGroup}>\r\n              <label htmlFor=\"email\">이메일</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"your@email.com\"\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className={styles.submitButton} disabled={isLoading}>\r\n              {isLoading ? '확인 중...' : '이메일로 계속하기'}\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        {step === 2 && (\r\n          <form onSubmit={handleFinalSubmit}>\r\n            <div className={styles.inputGroup}>\r\n              <label htmlFor=\"email\">이메일</label>\r\n              <div className={styles.emailDisplay} onClick={() => setStep(1)}>\r\n                {email}\r\n                <span>ⓘ</span>\r\n              </div>\r\n            </div>\r\n            <div className={styles.inputGroup}>\r\n              <label htmlFor=\"password\">비밀번호</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"비밀번호\"\r\n                required\r\n                autoFocus\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className={styles.submitButton} disabled={isLoading}>\r\n              {isLoading ? '처리 중...' : (isRegistered ? '로그인' : '회원가입')}\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        <div className={styles.links}>\r\n            {step === 2 && !isRegistered && (\r\n                 <p className={styles.authSwitch}>\r\n                    이미 계정이 있으신가요? <span onClick={() => setIsRegistered(true)}>로그인</span>\r\n                </p>\r\n            )}\r\n            <Link href=\"/forgot-password\" className={styles.forgotPassword}>\r\n                비밀번호를 잊어버리셨나요?\r\n            </Link>\r\n        </div>\r\n\r\n        <div className={styles.divider}>\r\n          <span>또는</span>\r\n        </div>\r\n\r\n        <div className={styles.socialLogin}>\r\n          <button className={styles.socialButton}><BsTwitterX /></button>\r\n          <button className={styles.socialButton}><BsGoogle /></button>\r\n          <button className={styles.socialButton}><BsApple /></button>\r\n        </div>\r\n        \r\n        {step === 2 && isRegistered && (\r\n            <p className={styles.authSwitch}>\r\n                아직 계정이 없다면? <Link href=\"#\" onClick={(e) => { e.preventDefault(); setIsRegistered(false); }}>위버스 계정으로 가입하기</Link>\r\n            </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}